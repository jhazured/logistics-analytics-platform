-- =====================================================
-- User Roles and Permissions Setup
-- =====================================================
-- This script creates roles and permissions based on environment variables
-- Usage: Set SF_DATABASE environment variable before running
-- Example: export SF_DATABASE="LOGISTICS_DW_DEV" && snowsql -f 04_user_roles_permissions.sql

-- Get database name from environment variable or use default
SET DATABASE_NAME = IFNULL($SF_DATABASE, 'LOGISTICS_DW_DEV');

-- Create role hierarchy for data governance
CREATE ROLE IF NOT EXISTS DATA_ENGINEER;
CREATE ROLE IF NOT EXISTS DATA_ANALYST; 
CREATE ROLE IF NOT EXISTS DATA_SCIENTIST;
CREATE ROLE IF NOT EXISTS ML_ENGINEER;
CREATE ROLE IF NOT EXISTS BUSINESS_USER;
CREATE ROLE IF NOT EXISTS DATA_STEWARD;
CREATE ROLE IF NOT EXISTS SECURITY_ADMIN;

-- Create dbt-specific roles
CREATE ROLE IF NOT EXISTS DBT_DEV_ROLE;
CREATE ROLE IF NOT EXISTS DBT_STAGING_ROLE;
CREATE ROLE IF NOT EXISTS DBT_PROD_ROLE;

-- Role hierarchy
GRANT ROLE DATA_ANALYST TO ROLE DATA_ENGINEER;
GRANT ROLE BUSINESS_USER TO ROLE DATA_ANALYST;
GRANT ROLE DATA_SCIENTIST TO ROLE DATA_ENGINEER;
GRANT ROLE ML_ENGINEER TO ROLE DATA_ENGINEER;

-- dbt role hierarchy
GRANT ROLE DATA_ENGINEER TO ROLE DBT_DEV_ROLE;
GRANT ROLE DATA_ENGINEER TO ROLE DBT_STAGING_ROLE;
GRANT ROLE DATA_ENGINEER TO ROLE DBT_PROD_ROLE;

-- =====================================================
-- ENVIRONMENT-SPECIFIC PERMISSIONS
-- =====================================================

-- Database permissions for the specified environment
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DATA_ENGINEER;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DATA_ANALYST;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DATA_SCIENTIST;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE ML_ENGINEER;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE BUSINESS_USER;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DATA_STEWARD;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE SECURITY_ADMIN;

-- dbt role database permissions (use same database for all environments)
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_DEV_ROLE;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_STAGING_ROLE;
GRANT USAGE ON DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_PROD_ROLE;

-- Schema-level permissions
-- RAW Schema - DATA_ENGINEER only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME || '.RAW') TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME || '.RAW') TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).RAW TO ROLE DATA_ENGINEER;

-- STAGING Schema - DATA_ENGINEER only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).STAGING TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).STAGING TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).STAGING TO ROLE DATA_ENGINEER;

-- MARTS Schema - DATA_ENGINEER, DATA_ANALYST
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).MARTS TO ROLE DATA_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).MARTS TO ROLE DATA_ANALYST;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).MARTS TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).MARTS TO ROLE DATA_ENGINEER;

-- ML_FEATURES Schema - DATA_ENGINEER, ML_ENGINEER, DATA_SCIENTIST
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE DATA_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE ML_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE DATA_SCIENTIST;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE ML_ENGINEER;

-- ANALYTICS Schema - DATA_ENGINEER, DATA_ANALYST, BUSINESS_USER
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE DATA_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE DATA_ANALYST;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE BUSINESS_USER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE DATA_ANALYST;

-- MONITORING Schema - DATA_ENGINEER only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).MONITORING TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).MONITORING TO ROLE DATA_ENGINEER;

-- SNAPSHOTS Schema - DATA_ENGINEER only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).SNAPSHOTS TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).SNAPSHOTS TO ROLE DATA_ENGINEER;

-- ML_OBJECTS Schema - DATA_ENGINEER, ML_ENGINEER, DATA_SCIENTIST
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE DATA_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE ML_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE DATA_SCIENTIST;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE ML_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).ML_OBJECTS TO ROLE ML_ENGINEER;

-- GOVERNANCE Schema - DATA_ENGINEER, DATA_STEWARD
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_ENGINEER;
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_STEWARD;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_ENGINEER;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_STEWARD;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_STEWARD;

-- PERFORMANCE Schema - DATA_ENGINEER only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).PERFORMANCE TO ROLE DATA_ENGINEER;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).PERFORMANCE TO ROLE DATA_ENGINEER;

-- SECURITY Schema - SECURITY_ADMIN only
GRANT USAGE ON SCHEMA IDENTIFIER($DATABASE_NAME).SECURITY TO ROLE SECURITY_ADMIN;
GRANT CREATE TABLE ON SCHEMA IDENTIFIER($DATABASE_NAME).SECURITY TO ROLE SECURITY_ADMIN;
GRANT CREATE VIEW ON SCHEMA IDENTIFIER($DATABASE_NAME).SECURITY TO ROLE SECURITY_ADMIN;

-- dbt role schema permissions
-- Dev environment
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DBT_DEV_ROLE;
GRANT CREATE TABLE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DBT_DEV_ROLE;
GRANT CREATE VIEW ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DBT_DEV_ROLE;

-- Staging environment
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DBT_STAGING_ROLE;
GRANT CREATE TABLE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DBT_STAGING_ROLE;
GRANT CREATE VIEW ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DBT_STAGING_ROLE;

-- Production environment
GRANT USAGE ON ALL SCHEMAS IN DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_PROD_ROLE;
GRANT CREATE TABLE ON ALL SCHEMAS IN DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_PROD_ROLE;
GRANT CREATE VIEW ON ALL SCHEMAS IN DATABASE IDENTIFIER($DATABASE_NAME) TO ROLE DBT_PROD_ROLE;

-- =====================================================
-- DEVELOPMENT ENVIRONMENT PERMISSIONS
-- =====================================================

-- Database permissions
GRANT USAGE ON DATABASE LOGISTICS_DW_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON DATABASE LOGISTICS_DW_DEV TO ROLE DATA_ANALYST;
GRANT USAGE ON DATABASE LOGISTICS_DW_DEV TO ROLE DATA_SCIENTIST;
GRANT USAGE ON DATABASE LOGISTICS_DW_DEV TO ROLE ML_ENGINEER;

-- Schema permissions (same as production but for dev)
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DATA_ANALYST;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE DATA_SCIENTIST;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_DEV TO ROLE ML_ENGINEER;

-- =====================================================
-- STAGING ENVIRONMENT PERMISSIONS
-- =====================================================

-- Database permissions
GRANT USAGE ON DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_ANALYST;
GRANT USAGE ON DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_SCIENTIST;
GRANT USAGE ON DATABASE LOGISTICS_DW_STAGING TO ROLE ML_ENGINEER;

-- Schema permissions (same as production but for staging)
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_ENGINEER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_ANALYST;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE DATA_SCIENTIST;
GRANT USAGE ON ALL SCHEMAS IN DATABASE LOGISTICS_DW_STAGING TO ROLE ML_ENGINEER;

-- =====================================================
-- WAREHOUSE PERMISSIONS
-- =====================================================

-- Grant warehouse permissions
GRANT USAGE ON WAREHOUSE COMPUTE_WH_XS TO ROLE DATA_ENGINEER;
GRANT USAGE ON WAREHOUSE COMPUTE_WH_SMALL TO ROLE DATA_ANALYST;
GRANT USAGE ON WAREHOUSE COMPUTE_WH_MEDIUM TO ROLE ML_ENGINEER;
GRANT USAGE ON WAREHOUSE COMPUTE_WH_LARGE TO ROLE DATA_SCIENTIST;

-- dbt role warehouse permissions
GRANT USAGE ON WAREHOUSE COMPUTE_WH_XS TO ROLE DBT_DEV_ROLE;
GRANT USAGE ON WAREHOUSE COMPUTE_WH_SMALL TO ROLE DBT_STAGING_ROLE;
GRANT USAGE ON WAREHOUSE COMPUTE_WH_MEDIUM TO ROLE DBT_PROD_ROLE;

-- =====================================================
-- FUTURE GRANTS
-- =====================================================

-- Future table grants
GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER($DATABASE_NAME).MARTS TO ROLE DATA_ANALYST;
GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE ML_ENGINEER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER($DATABASE_NAME).ML_FEATURES TO ROLE DATA_SCIENTIST;
GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER($DATABASE_NAME).GOVERNANCE TO ROLE DATA_STEWARD;

-- Future view grants
GRANT SELECT ON FUTURE VIEWS IN SCHEMA IDENTIFIER($DATABASE_NAME).ANALYTICS TO ROLE BUSINESS_USER;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA IDENTIFIER($DATABASE_NAME).MONITORING TO ROLE DATA_ENGINEER;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA IDENTIFIER($DATABASE_NAME).PERFORMANCE TO ROLE DATA_ENGINEER;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA IDENTIFIER($DATABASE_NAME).SECURITY TO ROLE SECURITY_ADMIN;

-- =====================================================
-- ROLE COMMENTS
-- =====================================================

COMMENT ON ROLE DATA_ENGINEER IS 'Full access to all data layers, responsible for data pipeline development and maintenance';
COMMENT ON ROLE DATA_ANALYST IS 'Access to marts and analytics layers, responsible for business analysis and reporting';
COMMENT ON ROLE DATA_SCIENTIST IS 'Access to ML features and objects, responsible for data science and ML model development';
COMMENT ON ROLE ML_ENGINEER IS 'Access to ML features and objects, responsible for ML model deployment and maintenance';
COMMENT ON ROLE BUSINESS_USER IS 'Read-only access to analytics views, for business users and stakeholders';
COMMENT ON ROLE DATA_STEWARD IS 'Access to governance layer, responsible for data quality and compliance';
COMMENT ON ROLE SECURITY_ADMIN IS 'Access to security layer, responsible for security policies and access control';

-- dbt role comments
COMMENT ON ROLE DBT_DEV_ROLE IS 'dbt development role with full access to dev environment';
COMMENT ON ROLE DBT_STAGING_ROLE IS 'dbt staging role with full access to staging environment';
COMMENT ON ROLE DBT_PROD_ROLE IS 'dbt production role with full access to production environment';