-- Create audit tables for different event types
CREATE OR REPLACE TABLE AUDIT_DB.AUDIT_LOGS.TBL_account_events (
    EVENT_ID VARCHAR(50) DEFAULT UUID_STRING(),
    EVENT_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    EVENT_TYPE VARCHAR(100),
    USER_NAME VARCHAR(255),
    CLIENT_IP VARCHAR(45),
    CLIENT_APPLICATION VARCHAR(255),
    QUERY_ID VARCHAR(50),
    QUERY_TEXT TEXT,
    DATABASE_NAME VARCHAR(255),
    SCHEMA_NAME VARCHAR(255),
    OBJECT_NAME VARCHAR(255),
    OBJECT_TYPE VARCHAR(50),
    OPERATION VARCHAR(50),
    SUCCESS BOOLEAN,
    ERROR_CODE VARCHAR(50),
    ERROR_MESSAGE TEXT,
    ROWS_AFFECTED NUMBER,
    CREDITS_USED FLOAT,
    EXECUTION_TIME_MS NUMBER
) COMMENT = 'Account-level audit events';

-- Create login events table
CREATE OR REPLACE TABLE AUDIT_DB.AUDIT_LOGS.TBL_login_events (
    EVENT_ID VARCHAR(50) DEFAULT UUID_STRING(),
    EVENT_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    USER_NAME VARCHAR(255),
    CLIENT_IP VARCHAR(45),
    CLIENT_APPLICATION VARCHAR(255),
    AUTHENTICATION_METHOD VARCHAR(50),
    SUCCESS BOOLEAN,
    ERROR_MESSAGE TEXT,
    SESSION_ID VARCHAR(50)
) COMMENT = 'User login and authentication events';

-- Create data access events table
CREATE OR REPLACE TABLE AUDIT_DB.AUDIT_LOGS.TBL_data_access_events (
    EVENT_ID VARCHAR(50) DEFAULT UUID_STRING(),
    EVENT_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    USER_NAME VARCHAR(255),
    DATABASE_NAME VARCHAR(255),
    SCHEMA_NAME VARCHAR(255),
    TABLE_NAME VARCHAR(255),
    OPERATION VARCHAR(50),
    QUERY_ID VARCHAR(50),
    ROWS_RETURNED NUMBER,
    CREDITS_USED FLOAT
) COMMENT = 'Data access and query events';
