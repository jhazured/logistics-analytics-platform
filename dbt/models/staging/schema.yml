version: 2

sources:
  - name: raw_logistics
    description: "Raw logistics data from various source systems"
    database: "{{ env_var('SF_DATABASE', var('raw_database', 'LOGISTICS_DW_DEV')) }}"
    schema: RAW
    freshness:
      warn_after: {count: 2, period: hour}
      error_after: {count: 6, period: hour}
    loaded_at_field: _loaded_at
    
    tables:
      - name: SHIPMENTS
        description: "Raw shipment data from TMS system"
        columns:
          - name: shipment_id
            description: "Unique identifier for each shipment"
            tests:
              - unique
              - not_null
          - name: customer_id
            description: "Foreign key to customer dimension"
            tests:
              - not_null
              - relationships:
                  to: source('raw_logistics', 'CUSTOMERS')
                  field: customer_id
          - name: origin_location_id
            description: "Pickup location identifier"
            tests:
              - not_null
          - name: destination_location_id  
            description: "Delivery location identifier"
            tests:
              - not_null
          - name: shipment_date
            description: "Date when shipment was created"
            tests:
              - not_null
          - name: requested_delivery_date
            description: "Customer requested delivery date"
          - name: actual_delivery_date
            description: "Actual delivery completion date"
          - name: shipment_value
            description: "Total value of shipment in USD"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 1000000
          - name: weight_lbs
            description: "Total weight of shipment in pounds"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 80000
          - name: shipment_status
            description: "Current status of the shipment"
            tests:
              - accepted_values:
                  values: ['PENDING', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', 'DELAYED']
      
      - name: MAINTENANCE
        description: "Raw maintenance data from vehicle management system"
        columns:
          - name: maintenance_id
            description: "Unique identifier for each maintenance record"
            tests:
              - unique
              - not_null
          - name: vehicle_id
            description: "Foreign key to vehicle dimension"
            tests:
              - not_null
          - name: maintenance_date
            description: "Date when maintenance was performed"
            tests:
              - not_null
          - name: maintenance_type
            description: "Type of maintenance performed"
            tests:
              - not_null
              - accepted_values:
                  values: ['ROUTINE', 'REPAIR', 'INSPECTION', 'EMERGENCY']
          - name: total_cost
            description: "Cost of maintenance in USD"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
      
      - name: CUSTOMERS
        description: "Raw customer data from CRM system"
        columns:
          - name: customer_id
            description: "Unique identifier for each customer"
            tests:
              - unique
              - not_null
          - name: customer_name
            description: "Customer company name"
            tests:
              - not_null
          - name: customer_type
            description: "Customer type level"
            tests:
              - not_null
              - accepted_values:
                  values: ['BASIC', 'STANDARD', 'PREMIUM']
      
      - name: VEHICLES
        description: "Raw vehicle data from fleet management system"
        columns:
          - name: vehicle_id
            description: "Unique identifier for each vehicle"
            tests:
              - unique
              - not_null
          - name: vehicle_type
            description: "Type of vehicle"
            tests:
              - not_null
              - accepted_values:
                  values: ['TRUCK', 'VAN', 'MOTORCYCLE', 'TRAILER']
          - name: capacity_lbs
            description: "Vehicle capacity in pounds"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
      
      - name: TELEMATICS
        description: "Raw telematics data from vehicle sensors"
        columns:
          - name: telemetry_id
            description: "Unique identifier for each telemetry record"
            tests:
              - unique
              - not_null
          - name: vehicle_id
            description: "Foreign key to vehicle"
            tests:
              - not_null
          - name: timestamp
            description: "Timestamp of telemetry reading"
            tests:
              - not_null
          - name: speed_mph
            description: "Vehicle speed in miles per hour"
            tests:
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 120
      
      - name: TRAFFIC
        description: "Raw traffic condition data from traffic APIs"
        columns:
          - name: traffic_id
            description: "Unique identifier for each traffic record"
            tests:
              - unique
              - not_null
          - name: location_id
            description: "Location identifier"
            tests:
              - not_null
          - name: date
            description: "Date of traffic reading"
            tests:
              - not_null
          - name: traffic_level
            description: "Traffic congestion level"
            tests:
              - not_null
              - accepted_values:
                  values: ['LOW', 'MODERATE', 'HIGH', 'SEVERE']
      
      - name: WEATHER
        description: "Raw weather data from weather APIs"
        columns:
          - name: weather_id
            description: "Unique identifier for each weather record"
            tests:
              - unique
              - not_null
          - name: location_id
            description: "Location identifier"
            tests:
              - not_null
          - name: date
            description: "Date of weather reading"
            tests:
              - not_null
          - name: temperature_f
            description: "Temperature in Fahrenheit"
            tests:
              - dbt_utils.accepted_range:
                  min_value: -50
                  max_value: 150
          - name: precipitation_mm
            description: "Precipitation in millimeters"
            tests:
              - dbt_utils.accepted_range:
                  min_value: 0

models:
  - name: tbl_stg_shipments
    description: "Cleaned and standardized shipment data"
    columns:
      - name: shipment_id
        description: "Unique identifier for each shipment"
        tests:
          - unique
          - not_null
      - name: customer_id
        description: "Foreign key to customer dimension"
        tests:
          - not_null
          - relationships:
              to: ref('tbl_dim_customer')
              field: customer_id
      - name: shipment_date
        description: "Date when shipment was created"
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: "'2020-01-01'"
              max_value: "current_date()"
      - name: actual_duration_minutes
        description: "Calculated delivery time in minutes"
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 43200  # 30 days max in minutes
      - name: delivery_status
        description: "Delivery status of the shipment"
        tests:
          - not_null
          - accepted_values:
              values: ['PENDING', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED', 'DELAYED']
      - name: distance_km
        description: "Calculated distance between origin and destination in km"
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 8000